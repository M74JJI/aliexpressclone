{"version":3,"sources":["pages/auth/RegisterComplete.js"],"names":["RegisterComplete","history","useState","email","setEmail","password","setPassword","dispatch","useDispatch","useEffect","window","localStorage","getItem","handleSubmit","e","a","preventDefault","toast","error","length","auth","signInWithEmailLink","location","href","user","emailVerified","removeItem","currentUser","updatePassword","getIdTokenResult","idTokenResult","console","log","createOrUpdateUser","token","then","res","type","payload","name","data","role","_id","catch","err","push","message","className","style","marginRight","onSubmit","value","onChange","target","autoFocus","placeholder","onClick","disabled"],"mappings":"uMAyGeA,UAnGU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACZC,mBAAS,IADG,mBAC/BC,EAD+B,KACxBC,EADwB,OAENF,mBAAS,IAFH,mBAE/BG,EAF+B,KAErBC,EAFqB,KAKlCC,EAAWC,cAEfC,qBAAU,WACNL,EAASM,OAAOC,aAAaC,QAAQ,2BAGtC,CAACX,IAEJ,IAAMY,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,yDACjBD,EAAEE,iBAEGb,GAAUE,EAHE,uBAIbY,IAAMC,MAAM,kCAJC,+BAQbb,EAASc,OAAS,GARL,uBASbF,IAAMC,MAAM,+CATC,oDAcQE,IAAKC,oBACtBlB,EACAO,OAAOY,SAASC,MAhBP,mBAmBFC,KAAKC,cAnBH,wBAqBTf,OAAOC,aAAae,WAAW,wBAE3BF,EAAOJ,IAAKO,YAvBP,UAwBHH,EAAKI,eAAevB,GAxBjB,yBAyBmBmB,EAAKK,mBAzBxB,QAyBHC,EAzBG,OA2BTC,QAAQC,IAAI,OAAQR,EAAM,gBAAiBM,GAE3CG,YAAmBH,EAAcI,OAC5BC,MAAK,SAACC,GACH7B,EAAS,CACL8B,KAAM,iBACNC,QAAS,CACLC,KAAMH,EAAII,KAAKD,KACfpC,MAAOiC,EAAII,KAAKrC,MAChB+B,MAAOJ,EAAcI,MACrBO,KAAML,EAAII,KAAKC,KACfC,IAAKN,EAAII,KAAKE,UAIzBC,OAAM,SAACC,GAAD,OAASb,QAAQC,IAAIY,MAGhC3C,EAAQ4C,KAAK,KA7CJ,0DAgDbd,QAAQC,IAAR,MACAf,IAAMC,MAAM,KAAM4B,SAjDL,0DAAH,sDAqDlB,OACI,yBAAKC,UAAU,eACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,gBACf,4BACI,wBAAIC,MAAO,CAAEC,YAAa,SAA1B,uBAEJ,yBAAKF,UAAU,eACX,0BAAMG,SAAUrC,GACZ,2BACIwB,KAAK,QACLc,MAAOhD,EACPiD,SAAU,SAACtC,GAAD,OAAOV,EAASU,EAAEuC,OAAOF,QACnCG,WAAS,EACTC,YAAY,kBACb,IACH,2BACIlB,KAAK,WACLc,MAAO9C,EACP+C,SAAU,SAACtC,GAAD,OAAOR,EAAYQ,EAAEuC,OAAOF,QACtCI,YAAY,WACZD,WAAS,IAEb,4BAAQE,QAAS3C,EAAc4C,UAAWtD,GAA1C,oB","file":"static/js/28.60b320ee.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { auth } from '../../firebase';\nimport { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { createOrUpdateUser } from '../../functions/auth';\nimport '../../styles/login.css';\nconst RegisterComplete = ({ history }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    // const { user } = useSelector((state) => ({ ...state }));\n    let dispatch = useDispatch();\n\n    useEffect(() => {\n        setEmail(window.localStorage.getItem('emailForRegistration'));\n        // console.log(window.location.href);\n        // console.log(window.localStorage.getItem(\"emailForRegistration\"));\n    }, [history]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        // validation\n        if (!email || !password) {\n            toast.error('Email and password is required');\n            return;\n        }\n\n        if (password.length < 6) {\n            toast.error('Password must be at least 6 characters long');\n            return;\n        }\n\n        try {\n            const result = await auth.signInWithEmailLink(\n                email,\n                window.location.href\n            );\n            //   console.log(\"RESULT\", result);\n            if (result.user.emailVerified) {\n                // remove user email fom local storage\n                window.localStorage.removeItem('emailForRegistration');\n                // get user id token\n                let user = auth.currentUser;\n                await user.updatePassword(password);\n                const idTokenResult = await user.getIdTokenResult();\n                // redux store\n                console.log('user', user, 'idTokenResult', idTokenResult);\n\n                createOrUpdateUser(idTokenResult.token)\n                    .then((res) => {\n                        dispatch({\n                            type: 'LOGGED_IN_USER',\n                            payload: {\n                                name: res.data.name,\n                                email: res.data.email,\n                                token: idTokenResult.token,\n                                role: res.data.role,\n                                _id: res.data._id,\n                            },\n                        });\n                    })\n                    .catch((err) => console.log(err));\n\n                // redirect\n                history.push('/');\n            }\n        } catch (error) {\n            console.log(error);\n            toast.error(error.message);\n        }\n    };\n\n    return (\n        <div className=\"logRegModal\">\n            <div className=\"logRegModal-container\">\n                <div className=\"logReg-logo\"></div>\n                <ul>\n                    <li style={{ marginRight: '5rem' }}>Rest your password</li>\n                </ul>\n                <div className=\"logReg-form\">\n                    <form onSubmit={handleSubmit}>\n                        <input\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            autoFocus\n                            placeholder=\"Email Address\"\n                        />{' '}\n                        <input\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            placeholder=\"Password\"\n                            autoFocus\n                        />\n                        <button onClick={handleSubmit} disabled={!email}>\n                            Send Email\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RegisterComplete;\n"],"sourceRoot":""}