{"version":3,"sources":["pages/AdminDashboard/CreateSubCategory.js","components/AdminDashboard/Layout/CreateSubLayout.js"],"names":["CreateSubCategory","user","useSelector","state","useState","name","setName","loading","setLoading","categories","setCategories","category","setCategory","subs","setSubs","keyword","setKeyword","useEffect","loadCategories","loadSubs","getCategories","then","c","data","getSubs","s","handleRemove","slug","a","window","confirm","removeSub","token","res","toast","error","catch","err","response","status","className","onChange","e","target","value","length","map","key","_id","CategoryForm","handleSubmit","preventDefault","createSub","parent","success","console","log","LocalSearch","filter","toLowerCase","includes","searched","onClick","DeleteOutlined","to","EditOutlined","CreateSubLayout","themeReducer","ThemeReducer","dispatch","useDispatch","themeClass","localStorage","getItem","colorClass","ThemeAction","setMode","setColor","mode","color","Sidebar","TopNav"],"mappings":"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","file":"static/js/30.b33996a5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AdminNav from '../../components/nav/AdminNav';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\nimport { getCategories } from '../../functions/category';\r\nimport { createSub, getSub, removeSub, getSubs } from '../../functions/sub';\r\nimport { Link } from 'react-router-dom';\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport CategoryForm from '../../components/forms/CategoryForm';\r\nimport LocalSearch from '../../components/forms/LocalSearch';\r\n\r\nconst CreateSubCategory = () => {\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n\r\n    const [name, setName] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [categories, setCategories] = useState([]);\r\n    const [category, setCategory] = useState('');\r\n    const [subs, setSubs] = useState([]);\r\n    // step 1\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n        loadSubs();\r\n    }, []);\r\n\r\n    const loadCategories = () =>\r\n        getCategories().then((c) => setCategories(c.data));\r\n\r\n    const loadSubs = () => getSubs().then((s) => setSubs(s.data));\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(name);\r\n        setLoading(true);\r\n        createSub({ name, parent: category }, user.token)\r\n            .then((res) => {\r\n                // console.log(res)\r\n                setLoading(false);\r\n                setName('');\r\n                toast.success(`\"${res.data.name}\" is created`);\r\n                loadSubs();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setLoading(false);\r\n                if (err.response.status === 400) toast.error(err.response.data);\r\n            });\r\n    };\r\n\r\n    const handleRemove = async (slug) => {\r\n        // let answer = window.confirm(\"Delete?\");\r\n        // console.log(answer, slug);\r\n        if (window.confirm('Delete?')) {\r\n            setLoading(true);\r\n            removeSub(slug, user.token)\r\n                .then((res) => {\r\n                    setLoading(false);\r\n                    toast.error(`${res.data.name} deleted`);\r\n                    loadSubs();\r\n                })\r\n                .catch((err) => {\r\n                    if (err.response.status === 400) {\r\n                        setLoading(false);\r\n                        toast.error(err.response.data);\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    // step 4\r\n    const searched = (keyword) => (c) => c.name.toLowerCase().includes(keyword);\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-danger\">Loading..</h4>\r\n                    ) : (\r\n                        <h4>Create sub category</h4>\r\n                    )}\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Parent category</label>\r\n                        <select\r\n                            name=\"category\"\r\n                            className=\"form-control\"\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                        >\r\n                            <option>Please select</option>\r\n                            {categories.length > 0 &&\r\n                                categories.map((c) => (\r\n                                    <option key={c._id} value={c._id}>\r\n                                        {c.name}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <CategoryForm\r\n                        handleSubmit={handleSubmit}\r\n                        name={name}\r\n                        setName={setName}\r\n                    />\r\n\r\n                    {/* step 2 and step 3 */}\r\n                    <LocalSearch keyword={keyword} setKeyword={setKeyword} />\r\n\r\n                    {/* step 5 */}\r\n                    {subs.filter(searched(keyword)).map((s) => (\r\n                        <div className=\"alert alert-secondary\" key={s._id}>\r\n                            {s.name}\r\n                            <span\r\n                                onClick={() => handleRemove(s.slug)}\r\n                                className=\"btn btn-sm float-right\"\r\n                            >\r\n                                <DeleteOutlined className=\"text-danger\" />\r\n                            </span>\r\n                            <Link to={`/admin/sub/${s.slug}`}>\r\n                                <span className=\"btn btn-sm float-right\">\r\n                                    <EditOutlined className=\"text-warning\" />\r\n                                </span>\r\n                            </Link>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateSubCategory;\r\n","import React, { useEffect } from 'react';\r\nimport '../../../assets/boxicons-2.0.7/css/boxicons.min.css';\r\nimport '../../../assets/css/grid.css';\r\nimport '../../../assets/css/theme.css';\r\nimport '../../../assets/css/index.css';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport './layout.css';\r\nimport Dashboard from '../../../pages/AdminDashboard/Dashboard';\r\nimport TopNav from '../topnav/TopNav';\r\nimport Users from '../../../pages/AdminDashboard/Users';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport CreateSubCategory from '../../../pages/AdminDashboard/CreateSubCategory';\r\nimport ThemeAction from '../../../reducers/ThemeAction';\r\nfunction CreateSubLayout() {\r\n    const themeReducer = useSelector((state) => state.ThemeReducer);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const themeClass = localStorage.getItem(\r\n            'themeMode',\r\n            'theme-mode-light'\r\n        );\r\n\r\n        const colorClass = localStorage.getItem(\r\n            'colorMode',\r\n            'theme-mode-light'\r\n        );\r\n\r\n        dispatch(ThemeAction.setMode(themeClass));\r\n\r\n        dispatch(ThemeAction.setColor(colorClass));\r\n    }, [dispatch]);\r\n    return (\r\n        <div className={`layout ${themeReducer.mode} ${themeReducer.color}`}>\r\n            <Sidebar />\r\n            <div className=\"layout__content\">\r\n                <TopNav />\r\n                <div className=\"layout__content-main\">\r\n                    <CreateSubCategory />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateSubLayout;\r\n"],"sourceRoot":""}