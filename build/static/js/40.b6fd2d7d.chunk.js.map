{"version":3,"sources":["pages/admin/product/ProductUpdate.js"],"names":["initialState","title","description","price","category","subs","shipping","quantity","images","colors","brands","color","brand","ProductUpdate","match","history","useState","values","setValues","categories","setCategories","subOptions","setSubOptions","arrayOfSubs","setArrayOfSubs","selectedCategory","setSelectedCategory","loading","setLoading","user","useSelector","state","slug","params","useEffect","loadProduct","loadCategories","getProduct","then","p","data","getCategorySubs","_id","res","arr","map","s","push","console","log","prev","getCategories","c","className","handleSubmit","e","preventDefault","updateProduct","token","toast","success","catch","err","error","response","handleChange","target","name","value","handleCategoryChange"],"mappings":"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","file":"static/js/40.b6fd2d7d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AdminNav from \"../../../components/nav/AdminNav\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { getProduct, updateProduct } from \"../../../functions/product\";\nimport { getCategories, getCategorySubs } from \"../../../functions/category\";\nimport FileUpload from \"../../../components/forms/FileUpload\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport ProductUpdateForm from \"../../../components/forms/ProductUpdateForm\";\n\nconst initialState = {\n  title: \"\",\n  description: \"\",\n  price: \"\",\n  category: \"\",\n  subs: [],\n  shipping: \"\",\n  quantity: \"\",\n  images: [],\n  colors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"],\n  brands: [\"Apple\", \"Samsung\", \"Microsoft\", \"Lenovo\", \"ASUS\"],\n  color: \"\",\n  brand: \"\",\n};\n\nconst ProductUpdate = ({ match, history }) => {\n  // state\n  const [values, setValues] = useState(initialState);\n  const [categories, setCategories] = useState([]);\n  const [subOptions, setSubOptions] = useState([]);\n  const [arrayOfSubs, setArrayOfSubs] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const { user } = useSelector((state) => ({ ...state }));\n  // router\n  const { slug } = match.params;\n\n  useEffect(() => {\n    loadProduct();\n    loadCategories();\n  }, []);\n\n  const loadProduct = () => {\n    getProduct(slug).then((p) => {\n      // console.log(\"single product\", p);\n      // 1 load single proudct\n      setValues({ ...values, ...p.data });\n      // 2 load single product category subs\n      getCategorySubs(p.data.category._id).then((res) => {\n        setSubOptions(res.data); // on first load, show default subs\n      });\n      // 3 prepare array of sub ids to show as default sub values in antd Select\n      let arr = [];\n      p.data.subs.map((s) => {\n        arr.push(s._id);\n      });\n      console.log(\"ARR\", arr);\n      setArrayOfSubs((prev) => arr); // required for ant design select to work\n    });\n  };\n\n  const loadCategories = () =>\n    getCategories().then((c) => {\n      console.log(\"GET CATEGORIES IN UPDATE PRODUCT\", c.data);\n      setCategories(c.data);\n    });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    values.subs = arrayOfSubs;\n    values.category = selectedCategory ? selectedCategory : values.category;\n\n    updateProduct(slug, values, user.token)\n      .then((res) => {\n        setLoading(false);\n        toast.success(`\"${res.data.title}\" is updated`);\n        history.push(\"/admin/products\");\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        toast.error(err.response.data.err);\n      });\n  };\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n    // console.log(e.target.name, \" ----- \", e.target.value);\n  };\n\n  const handleCategoryChange = (e) => {\n    e.preventDefault();\n    console.log(\"CLICKED CATEGORY\", e.target.value);\n    setValues({ ...values, subs: [] });\n\n    setSelectedCategory(e.target.value);\n\n    getCategorySubs(e.target.value).then((res) => {\n      console.log(\"SUB OPTIONS ON CATGORY CLICK\", res);\n      setSubOptions(res.data);\n    });\n\n    console.log(\"EXISTING CATEGORY values.category\", values.category);\n\n    // if user clicks back to the original category\n    // show its sub categories in default\n    if (values.category._id === e.target.value) {\n      loadProduct();\n    }\n    // clear old sub category ids\n    setArrayOfSubs([]);\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-2\">\n          <AdminNav />\n        </div>\n\n        <div className=\"col-md-10\">\n          {loading ? (\n            <LoadingOutlined className=\"text-danger h1\" />\n          ) : (\n            <h4>Product update</h4>\n          )}\n\n          {/* {JSON.stringify(values)} */}\n\n          <div className=\"p-3\">\n            <FileUpload\n              values={values}\n              setValues={setValues}\n              setLoading={setLoading}\n            />\n          </div>\n\n          <ProductUpdateForm\n            handleSubmit={handleSubmit}\n            handleChange={handleChange}\n            setValues={setValues}\n            values={values}\n            handleCategoryChange={handleCategoryChange}\n            categories={categories}\n            subOptions={subOptions}\n            arrayOfSubs={arrayOfSubs}\n            setArrayOfSubs={setArrayOfSubs}\n            selectedCategory={selectedCategory}\n          />\n          <hr />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductUpdate;\n"],"sourceRoot":""}