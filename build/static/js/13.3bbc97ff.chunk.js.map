{"version":3,"sources":["pages/category/CategoryHome.js","functions/rating.js","components/cards/ProductCard.js","components/forms/Star.js","components/cards/WideCard.js"],"names":["Menu","SubMenu","ItemGroup","CategoryHome","match","useState","products","setProducts","price","setPrice","ok","setOk","categories","setCategories","setStar","setSubs","setLoading","bestMatch","setBestMatch","latestSelected","setLatestSelected","highestSelling","setHighestSelling","highestPrice","setHighestPrice","lowestPrice","setLowestPrice","wideCard","setWideCard","setCategory","slug","params","shipping","setShipping","dispatch","useDispatch","text","useSelector","state","search","useEffect","loadAllProducts","getCategories","then","res","data","getSubs","fetchProducts","arg","fetchProductsByFilter","getProducts","getCategory","console","log","JSON","stringify","category","delayed","setTimeout","query","clearTimeout","handleStarClick","num","type","payload","stars","handleShippingchange","e","target","value","marks","0","50000","label","className","map","s","href","name","tipFormatter","v","range","onChange","max","defaultValue","starClick","numberOfStars","length","onClick","checked","p","key","_id","product","showAverage","ratings","ratingsArray","total","r","push","star","result","reduce","n","style","color","starDimension","starSpacing","starRatedColor","rating","editing","Card","Meta","ProductCard","user","cart","images","title","description","src","url","alt","sold","Star","changeRating","starHoverColor","starEmptyColor","WideCard","priceBefore"],"mappings":"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","file":"static/js/13.3bbc97ff.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    getProductsByCount,\n    fetchProductsByFilter,\n    getProducts,\n} from '../../functions/product';\nimport {\n    getCategories,\n    getCategory,\n    getCategorySubs,\n} from '../../functions/category';\nimport { getSubs } from '../../functions/sub';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ProductCard from '../../components/cards/ProductCard';\nimport { Menu, Slider, Checkbox, Radio } from 'antd';\nimport Header from '../../components/nav/header/Header';\nimport { Link } from 'react-router-dom';\nimport { HiOutlineViewGrid } from 'react-icons/hi';\nimport { GiHamburgerMenu } from 'react-icons/gi';\nimport TopHeader from '../../components/nav/topheader/TopHeader';\nimport {\n    DollarOutlined,\n    DownSquareOutlined,\n    StarOutlined,\n} from '@ant-design/icons';\n\nimport Star from '../../components/forms/Star';\nimport '../../styles/shop.css';\nimport WideCard from '../../components/cards/WideCard';\nconst { SubMenu, ItemGroup } = Menu;\n\nconst CategoryHome = ({ match }) => {\n    const [products, setProducts] = useState([]);\n\n    const [price, setPrice] = useState([0, 0]);\n    const [ok, setOk] = useState(false);\n    const [categories, setCategories] = useState([]);\n    const [categoryIds, setCategoryIds] = useState([]);\n    const [star, setStar] = useState('');\n    const [subs, setSubs] = useState([]);\n    const [sub, setSub] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [subRelated, setSubRelated] = useState([]);\n    const [bestMatch, setBestMatch] = useState(true);\n    const [latestSelected, setLatestSelected] = useState(false);\n    const [highestSelling, setHighestSelling] = useState(false);\n    const [highestPrice, setHighestPrice] = useState(false);\n    const [lowestPrice, setLowestPrice] = useState(false);\n    const [wideCard, setWideCard] = useState(false);\n    const [category, setCategory] = useState({});\n    const [brands, setBrands] = useState([\n        'Apple',\n        'Samsung',\n        'Microsoft',\n        'Lenovo',\n        'ASUS',\n    ]);\n    const { slug } = match.params;\n    const [brand, setBrand] = useState('');\n    const [colors, setColors] = useState([\n        'Black',\n        'Brown',\n        'Silver',\n        'White',\n        'Blue',\n    ]);\n    const [color, setColor] = useState('');\n    const [shipping, setShipping] = useState('');\n\n    let dispatch = useDispatch();\n    let { search } = useSelector((state) => ({ ...state }));\n    const { text } = search;\n\n    useEffect(() => {\n        loadAllProducts();\n        // fetch categories\n        getCategories().then((res) => setCategories(res.data));\n        // fetch subcategories\n        getSubs().then((res) => setSubs(res.data));\n        {\n            /* getCategorySubs(e.target.value).then((res) => {\n           \n            setSubOptions(res.data);\n        });*/\n        }\n    }, [latestSelected, highestSelling, highestPrice]);\n\n    const fetchProducts = (arg) => {\n        fetchProductsByFilter(arg).then((res) => {\n            setProducts(res.data);\n        });\n    };\n\n    // 1. load products by default on page load\n    const loadAllProducts = () => {\n        if (latestSelected) {\n            getProducts('createdAt', 'desc', 1).then((res) => {\n                setProducts(res.data);\n                setLoading(false);\n            });\n        }\n        if (highestSelling) {\n            getProducts('sold', 'desc', 1).then((res) => {\n                setProducts(res.data);\n                setLoading(false);\n            });\n        }\n        if (highestPrice) {\n            getProducts('price', 'desc', 1).then((res) => {\n                setProducts(res.data);\n                setLoading(false);\n            });\n        }\n        if (lowestPrice) {\n            getProducts('price', 'asc', 1).then((res) => {\n                setProducts(res.data);\n                setLoading(false);\n            });\n        } else {\n            getCategory(slug).then((res) => {\n                console.log(JSON.stringify(res.data, null, 4));\n                setCategory(res.data.category);\n                setProducts(res.data.products);\n                setLoading(false);\n            });\n        }\n    };\n\n    // 2. load products on user search input\n    useEffect(() => {\n        const delayed = setTimeout(() => {\n            fetchProducts({ query: text });\n            if (!text) {\n                loadAllProducts();\n            }\n        }, 300);\n        return () => clearTimeout(delayed);\n    }, [text]);\n\n    // 3. load products based on price range\n    useEffect(() => {\n        console.log('ok to request');\n        fetchProducts({ price });\n    }, [ok]);\n\n    const handleSlider = (value) => {\n        dispatch({\n            type: 'SEARCH_QUERY',\n            payload: { text: '' },\n        });\n\n        // reset\n\n        setPrice(value);\n\n        setTimeout(() => {\n            setOk(!ok);\n        }, 300);\n    };\n\n    // 4. load products based on category\n    // show categories in a list of checkbox\n    const showCategories = () =>\n        categories.map((c) => (\n            <div key={c._id}>\n                <Checkbox\n                    onChange={handleCheck}\n                    className=\"pb-2 pl-4 pr-4\"\n                    value={c._id}\n                    name=\"category\"\n                    checked={categoryIds.includes(c._id)}\n                >\n                    {c.name}\n                </Checkbox>\n                <br />\n            </div>\n        ));\n\n    // handle check for categories\n    const handleCheck = (e) => {\n        // reset\n        dispatch({\n            type: 'SEARCH_QUERY',\n            payload: { text: '' },\n        });\n\n        // console.log(e.target.value);\n        let inTheState = [...categoryIds];\n        let justChecked = e.target.value;\n        let foundInTheState = inTheState.indexOf(justChecked); // index or -1\n\n        // indexOf method ?? if not found returns -1 else return index [1,2,3,4,5]\n        if (foundInTheState === -1) {\n            inTheState.push(justChecked);\n        } else {\n            // if found pull out one item from index\n            inTheState.splice(foundInTheState, 1);\n        }\n\n        setCategoryIds(inTheState);\n        // console.log(inTheState);\n        fetchProducts({ category: inTheState });\n    };\n\n    // 5. show products by star rating\n    const handleStarClick = (num) => {\n        // console.log(num);\n        dispatch({\n            type: 'SEARCH_QUERY',\n            payload: { text: '' },\n        });\n\n        setStar(num);\n\n        fetchProducts({ stars: num });\n    };\n\n    const showStars = () => (\n        <div className=\"pr-4 pl-4 pb-2\">\n            <Star starClick={handleStarClick} numberOfStars={5} />\n            <Star starClick={handleStarClick} numberOfStars={4} />\n            <Star starClick={handleStarClick} numberOfStars={3} />\n            <Star starClick={handleStarClick} numberOfStars={2} />\n            <Star starClick={handleStarClick} numberOfStars={1} />\n        </div>\n    );\n\n    // 6. show products by sub category\n    const showSubs = () =>\n        subs.map((s) => (\n            <div\n                key={s._id}\n                onClick={() => handleSub(s)}\n                className=\"p-1 m-1 badge badge-secondary\"\n                style={{ cursor: 'pointer' }}\n            >\n                {s.name}\n            </div>\n        ));\n\n    const handleSub = (sub) => {\n        // console.log(\"SUB\", sub);\n        setSub(sub);\n        dispatch({\n            type: 'SEARCH_QUERY',\n            payload: { text: '' },\n        });\n\n        fetchProducts({ sub });\n    };\n\n    // 7. show products based on brand name\n    const showBrands = () =>\n        brands.map((b) => (\n            <Radio\n                key={b}\n                value={b}\n                name={b}\n                checked={b === brand}\n                onChange={handleBrand}\n                className=\"pb-1 pl-4 pr-4\"\n            >\n                {b}\n            </Radio>\n        ));\n\n    const handleBrand = (e) => {\n        dispatch({\n            type: 'SEARCH_QUERY',\n            payload: { text: '' },\n        });\n\n        setBrand(e.target.value);\n\n        fetchProducts({ brand: e.target.value });\n    };\n\n    // 8. show products based on color\n    const showColors = () =>\n        colors.map((c) => (\n            <Radio\n                key={c}\n                value={c}\n                name={c}\n                checked={c === color}\n                onChange={handleColor}\n                className=\"pb-1 pl-4 pr-4\"\n            >\n                {c}\n            </Radio>\n        ));\n\n    const handleColor = (e) => {\n        dispatch({\n            type: 'SEARCH_QUERY',\n            payload: { text: '' },\n        });\n\n        setColor(e.target.value);\n\n        fetchProducts({ colors: e.target.value });\n    };\n\n    // 9. show products based on shipping yes/no\n    const showShipping = () => (\n        <>\n            <Checkbox\n                onChange={handleShippingchange}\n                value=\"Yes\"\n                checked={shipping === 'Yes'}\n            >\n                Yes\n            </Checkbox>\n\n            <Checkbox\n                onChange={handleShippingchange}\n                value=\"No\"\n                checked={shipping === 'No'}\n            >\n                No\n            </Checkbox>\n        </>\n    );\n\n    const handleShippingchange = (e) => {\n        dispatch({\n            type: 'SEARCH_QUERY',\n            payload: { text: '' },\n        });\n\n        setShipping(e.target.value);\n        fetchProducts({ shipping: e.target.value });\n    };\n    const handleLatest = () => {\n        setLatestSelected(true);\n        setHighestSelling(false);\n        setHighestPrice(false);\n        setLowestPrice(false);\n        setBestMatch(false);\n    };\n    const handlehighestSelling = () => {\n        setHighestSelling(true);\n        setLatestSelected(false);\n        setHighestPrice(false);\n        setLowestPrice(false);\n        setBestMatch(false);\n    };\n    const handleHighestPrice = () => {\n        setHighestPrice(true);\n        setHighestSelling(false);\n        setLatestSelected(false);\n        setLowestPrice(false);\n        setBestMatch(false);\n    };\n    const handleLowestPrice = () => {\n        setLowestPrice(true);\n        setHighestPrice(false);\n        setHighestSelling(false);\n        setLatestSelected(false);\n        setBestMatch(false);\n    };\n    const marks = {\n        0: '$0',\n\n        50000: {\n            label: <strong>$3999</strong>,\n        },\n    };\n    return (\n        <>\n            <TopHeader />\n            <Header />\n            <div className=\"shop-container\">\n                <div className=\"shop\">\n                    <div className=\"shop-menu\">\n                        <div className=\"related-categories\">\n                            <div className=\"related-categories-title\">\n                                Related Categories\n                                <ul>\n                                    {categories.map((s) => (\n                                        <a href={`/category/${s.slug}`}>\n                                            <li>{s.name}</li>\n                                        </a>\n                                    ))}\n                                </ul>\n                            </div>\n                            <div className=\"slider\">\n                                <Slider\n                                    tipFormatter={(v) => `$${v}`}\n                                    range\n                                    value={price}\n                                    onChange={handleSlider}\n                                    max=\"50000\"\n                                    marks={marks}\n                                    defaultValue={[0, 3999]}\n                                />\n                            </div>\n                            <div className=\"stars-filter\">{showStars()}</div>\n                        </div>\n                    </div>\n\n                    <div className=\"shop-products\">\n                        {products.length < 1 && <p>No products found</p>}\n                        <div className=\"products-header\">\n                            <div className=\"sort\">\n                                <div className=\"sort-span\">\n                                    <span className=\"sort-title\">\n                                        {' '}\n                                        Sort by:\n                                    </span>\n                                    <span className=\"sort-wrapper\">\n                                        <span\n                                            className={\n                                                bestMatch\n                                                    ? 'sort-item active'\n                                                    : 'sort-item'\n                                            }\n                                        >\n                                            Best Match\n                                        </span>\n                                        <span\n                                            onClick={handlehighestSelling}\n                                            className={\n                                                highestSelling\n                                                    ? 'sort-item active'\n                                                    : 'sort-item'\n                                            }\n                                        >\n                                            Orders\n                                        </span>\n                                        <span\n                                            onClick={handleLatest}\n                                            className={\n                                                latestSelected\n                                                    ? 'sort-item active'\n                                                    : 'sort-item'\n                                            }\n                                        >\n                                            Newest\n                                        </span>\n                                        <span\n                                            onClick={handleHighestPrice}\n                                            className={\n                                                highestPrice\n                                                    ? 'sort-item active'\n                                                    : 'sort-item'\n                                            }\n                                        >\n                                            Highest Price\n                                        </span>\n                                        <span\n                                            onClick={handleLowestPrice}\n                                            className={\n                                                lowestPrice\n                                                    ? 'sort-item active'\n                                                    : 'sort-item'\n                                            }\n                                        >\n                                            Lowest Price\n                                        </span>\n                                    </span>\n                                    <div> Free shipping {showShipping()}</div>\n                                </div>\n                                <div className=\"switch-view\">\n                                    <HiOutlineViewGrid\n                                        className={wideCard ? '' : 'orange'}\n                                        onClick={() => setWideCard(false)}\n                                    />\n                                    <GiHamburgerMenu\n                                        className={wideCard ? 'orange' : ''}\n                                        onClick={() => setWideCard(true)}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div\n                            className={\n                                wideCard\n                                    ? 'product-list-container flex-column'\n                                    : 'product-list-container'\n                            }\n                        >\n                            {products.map((p) => (\n                                <div key={p._id}>\n                                    {wideCard ? (\n                                        <WideCard product={p} />\n                                    ) : (\n                                        <ProductCard product={p} />\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default CategoryHome;\n\n{\n    /* \nimport React, { useState, useEffect } from 'react';\nimport { getCategory } from '../../functions/category';\nimport ProductCard from '../../components/cards/ProductCard';\nimport Header from '../../components/nav/header/Header';\nimport TopHeader from '../../components/nav/topheader/TopHeader';\nconst CategoryHome = ({ match }) => {\n    const [category, setCategory] = useState({});\n    const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const { slug } = match.params;\n\n    useEffect(() => {\n        setLoading(true);\n        getCategory(slug).then((res) => {\n            console.log(JSON.stringify(res.data, null, 4));\n            setCategory(res.data.category);\n            setProducts(res.data.products);\n            setLoading(false);\n        });\n    }, []);\n\n    return (\n        <>\n            <TopHeader />\n            <Header />\n            <div className=\"row\">\n                <div className=\"col\">\n                    {loading ? (\n                        <h4 className=\"text-center p-3 mt-5 mb-5 display-4 jumbotron\">\n                            Loading...\n                        </h4>\n                    ) : (\n                        <h4 className=\"text-center p-3 mt-5 mb-5 display-4 jumbotron\">\n                            {products.length} Products in \"{category.name}\"\n                            category\n                        </h4>\n                    )}\n                </div>\n            </div>\n\n            <div className=\"row\">\n                {products.map((p) => (\n                    <div className=\"col\" key={p._id}>\n                        <ProductCard product={p} />\n                    </div>\n                ))}\n            </div>\n        </>\n    );\n};\n\nexport default CategoryHome;\n\n*/\n}\n","import React from 'react';\nimport StarRating from 'react-star-ratings';\n\nexport const showAverage = (p) => {\n    if (p && p.ratings) {\n        let ratingsArray = p && p.ratings;\n        let total = [];\n        let length = ratingsArray.length;\n        // console.log(\"length\", length);\n\n        ratingsArray.map((r) => total.push(r.star));\n        let totalReduced = total.reduce((p, n) => p + n, 0);\n        // console.log(\"totalReduced\", totalReduced);\n\n        let highest = length * 5;\n        // console.log(\"highest\", highest);\n\n        let result = (totalReduced * 5) / highest;\n        // console.log(\"result\", result);\n\n        return (\n            <div className=\"text-center pt-1 pb-3\" style={{ color: '#000' }}>\n                <span>\n                    <StarRating\n                        starDimension=\"15px\"\n                        starSpacing=\"2px\"\n                        starRatedColor=\"red\"\n                        rating={result}\n                        editing={false}\n                    />{' '}\n                    {result}\n                </span>\n            </div>\n        );\n    }\n};\n","import React, { useState } from 'react';\nimport { Card, Tooltip } from 'antd';\nimport { EyeOutlined, ShoppingCartOutlined } from '@ant-design/icons';\nimport laptop from '../../images/laptop.png';\nimport { Link } from 'react-router-dom';\nimport { showAverage } from '../../functions/rating';\nimport _ from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\nimport '../../styles/productCard.css';\nconst { Meta } = Card;\n\nconst ProductCard = ({ product }) => {\n    const [tooltip, setTooltip] = useState('Click to add');\n\n    // redux\n    const { user, cart } = useSelector((state) => ({ ...state }));\n    const dispatch = useDispatch();\n\n    const handleAddToCart = () => {\n        // create cart array\n        let cart = [];\n        if (typeof window !== 'undefined') {\n            // if cart is in local storage GET it\n            if (localStorage.getItem('cart')) {\n                cart = JSON.parse(localStorage.getItem('cart'));\n            }\n            // push new product to cart\n            cart.push({\n                ...product,\n                count: 1,\n            });\n            // remove duplicates\n            let unique = _.uniqWith(cart, _.isEqual);\n            // save to local storage\n            // console.log('unique', unique)\n            localStorage.setItem('cart', JSON.stringify(unique));\n            // show tooltip\n            setTooltip('Added');\n\n            // add to reeux state\n            dispatch({\n                type: 'ADD_TO_CART',\n                payload: unique,\n            });\n            // show cart items in side drawer\n            dispatch({\n                type: 'SET_VISIBLE',\n                payload: true,\n            });\n        }\n    };\n\n    // destructure\n    const { images, title, description, slug, price } = product;\n    return (\n        <div className=\"product\">\n            <a href={`/product/${slug}`}>\n                <img src={product.images[0].url} alt=\"\" />\n            </a>\n            <div className=\"product-infos\">\n                <a href={`/product/${slug}`}>\n                    <span className=\"product-title\">{product.title}</span>\n                </a>\n                <div className=\"product-price\">${product.price}</div>\n                <div className=\"product-rating\">\n                    {product &&\n                    product.ratings &&\n                    product.ratings.length > 0 ? (\n                        <div>{showAverage(product)}</div>\n                    ) : (\n                        'no rating yet'\n                    )}\n                </div>\n                <div className=\"product-sold\">{product.sold} sold</div>\n                <div className=\"product-shipping\">Free Shipping</div>\n            </div>\n        </div>\n    );\n};\n\nexport default ProductCard;\n{\n    /* \n {product && product.ratings && product.ratings.length > 0 ? (\n        showAverage(product)\n      ) : (\n        <div classNameName=\"text-center pt-1 pb-3\">No rating yet</div>\n      )}\n\n      <Card\n        cover={\n          <img\n            src={images && images.length ? images[0].url : laptop}\n            style={{ height: \"150px\", objectFit: \"cover\" }}\n            classNameName=\"p-1\"\n          />\n        }\n        actions={[\n          <Link to={`/product/${slug}`}>\n            <EyeOutlined classNameName=\"text-warning\" /> <br /> View Product\n          </Link>,\n          <Tooltip title={tooltip}>\n            <a onClick={handleAddToCart} disabled={product.quantity < 1}>\n              <ShoppingCartOutlined classNameName=\"text-danger\" /> <br />\n              {product.quantity < 1 ? \"Out of stock\" : \"Add to Cart\"}\n            </a>\n          </Tooltip>,\n        ]}\n      >\n        <Meta\n          title={`${title} - $${price}`}\n          description={`${description && description.substring(0, 40)}...`}\n        />\n      </Card>\n*/\n}\n","import React from \"react\";\nimport StarRating from \"react-star-ratings\";\n\nconst Star = ({ starClick, numberOfStars }) => (\n  <>\n    <StarRating\n      changeRating={() => starClick(numberOfStars)}\n      numberOfStars={numberOfStars}\n      starDimension=\"20px\"\n      starSpacing=\"2px\"\n      starHoverColor=\"red\"\n      starEmptyColor=\"red\"\n    />\n    <br />\n  </>\n);\n\nexport default Star;\n","import React from 'react';\r\nimport '../../styles/wideCard.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { showAverage } from '../../functions/rating';\r\nfunction WideCard({ product }) {\r\n    return (\r\n        <div className=\"wideCard\">\r\n            <Link>\r\n                <img src={product.images[0].url} alt=\"\" />\r\n            </Link>\r\n            <div className=\"wideCard-infos\">\r\n                <Link className=\"wideCard-title\">{product.title}</Link>\r\n                <span>{product.sold} sold</span>\r\n                <span>\r\n                    {product &&\r\n                    product.ratings &&\r\n                    product.ratings.length > 0 ? (\r\n                        <div>{showAverage(product)}</div>\r\n                    ) : (\r\n                        'no rating yet'\r\n                    )}\r\n                </span>\r\n            </div>{' '}\r\n            <div className=\"wideCard-price\">\r\n                {product.priceBefore && (\r\n                    <div className=\"wideCard-price-special\">Special Price</div>\r\n                )}\r\n                <span className=\"wideCard-price-value\">${product.price}</span>\r\n                {product.priceBefore && (\r\n                    <span className=\"wideCard-price-discount\">\r\n                        ${product.priceBefore}\r\n                    </span>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WideCard;\r\n"],"sourceRoot":""}