{"version":3,"sources":["pages/auth/Login.js"],"names":["Login","history","useState","email","setEmail","password","setPassword","setLoading","log","setLog","reg","setReg","setShowLog","user","useSelector","state","intended","location","useEffect","token","push","dispatch","useDispatch","roleBasedRedirect","res","from","data","role","googleLogin","a","auth","signInWithPopup","googleAuthProvider","then","result","getIdTokenResult","idTokenResult","createOrUpdateUser","type","payload","name","_id","hasStore","sentApp","catch","err","console","toast","error","message","handleSubmit","e","preventDefault","signInWithEmailAndPassword","config","url","process","handleCodeInApp","sendSignInLinkToEmail","success","window","localStorage","setItem","className","onClick","onSubmit","value","onChange","target","autoFocus","placeholder","to"],"mappings":"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","file":"static/js/26.72dbd798.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { auth, googleAuthProvider } from '../../firebase';\nimport { toast } from 'react-toastify';\nimport { Button } from 'antd';\nimport { MailOutlined, GoogleOutlined, CloseOutlined } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createOrUpdateUser } from '../../functions/auth';\nimport '../../styles/login.css';\nconst Login = ({ history }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [log, setLog] = useState(true);\n    const [reg, setReg] = useState(false);\n    const [showLog, setShowLog] = useState(false);\n    const { user } = useSelector((state) => ({ ...state }));\n    let intended = history.location.state;\n    useEffect(() => {\n        if (intended) {\n            return;\n        } else {\n            if (user && user.token) history.push('/');\n        }\n    }, [user, history]);\n\n    let dispatch = useDispatch();\n\n    const roleBasedRedirect = (res) => {\n        // check if intended\n\n        if (intended) {\n            history.push(intended.from);\n        } else {\n            if (res.data.role === 'admin') {\n                history.push('/admin/dashboard');\n            } else {\n                history.push('/user/history');\n            }\n        }\n    };\n\n    const googleLogin = async () => {\n        auth.signInWithPopup(googleAuthProvider)\n            .then(async (result) => {\n                const { user } = result;\n                const idTokenResult = await user.getIdTokenResult();\n                createOrUpdateUser(idTokenResult.token)\n                    .then((res) => {\n                        dispatch({\n                            type: 'LOGGED_IN_USER',\n                            payload: {\n                                name: res.data.name,\n                                email: res.data.email,\n\n                                token: idTokenResult.token,\n                                role: res.data.role,\n                                _id: res.data._id,\n                                hasStore: res.data.hasStore,\n                                sentApp: res.data.sentApp,\n                            },\n                        });\n                        roleBasedRedirect(res);\n                    })\n                    .catch((err) => console.log(err));\n                // history.push(\"/\");\n            })\n            .catch((err) => {\n                console.log(err);\n                toast.error(err.message);\n            });\n    };\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        // console.table(email, password);\n\n        if (log) {\n            try {\n                const result = await auth.signInWithEmailAndPassword(\n                    email,\n                    password\n                );\n                const { user } = result;\n                const idTokenResult = await user.getIdTokenResult();\n\n                createOrUpdateUser(idTokenResult.token)\n                    .then((res) => {\n                        dispatch({\n                            type: 'LOGGED_IN_USER',\n                            payload: {\n                                name: res.data.name,\n                                email: res.data.email,\n                                token: idTokenResult.token,\n                                role: res.data.role,\n                                _id: res.data._id,\n                                hasStore: res.data.hasStore,\n                                sentApp: res.data.sentApp,\n                            },\n                        });\n                        setShowLog(false);\n                        roleBasedRedirect(res);\n                    })\n                    .catch((err) => console.log(err));\n\n                // history.push(\"/\");\n            } catch (error) {\n                console.log(error);\n                toast.error(error.message);\n                setLoading(false);\n            }\n        } else {\n            if (!email) {\n                toast.error('Please Enter Your Email');\n            }\n            const config = {\n                url: process.env.REACT_APP_REGISTER_REDIRECT_URL,\n                handleCodeInApp: true,\n            };\n\n            await auth.sendSignInLinkToEmail(email, config);\n            toast.success(\n                `Email is sent to ${email}. Click the link to complete your registration.`\n            );\n            // save user email in local storage\n            window.localStorage.setItem('emailForRegistration', email);\n            // clear state\n            setEmail('');\n        }\n    };\n\n    const handleShowSignIn = () => {\n        setShowLog(true);\n        setLog(true);\n        setReg(false);\n    };\n    const handleShowSignUp = () => {\n        setShowLog(true);\n        setReg(true);\n        setLog(false);\n    };\n    return (\n        <div className=\"logRegModal\">\n            <div className=\"logRegModal-container\">\n                <div className=\"logReg-logo\"></div>\n                <ul>\n                    <li onClick={handleShowSignUp}>Register</li>\n                    <div\n                        className={reg ? 'selectedLine1 w100' : 'selectedLine1'}\n                    ></div>\n                    <li onClick={handleShowSignIn}>Sign In</li>\n                    <div\n                        className={log ? 'selectedLine2 w100' : 'selectedLine2'}\n                    ></div>\n                </ul>\n                <div className=\"logReg-form\">\n                    <form onSubmit={handleSubmit}>\n                        {reg && (\n                            <div className=\"benifits\">\n                                <span></span>\n                                <span>\n                                    Register now to get $3 New User Coupon.\n                                </span>\n                            </div>\n                        )}\n                        <input\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            autoFocus\n                            placeholder={\n                                log\n                                    ? 'Email address or member ID'\n                                    : 'Email address'\n                            }\n                        />\n                        {log && (\n                            <input\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        )}\n                        <button onClick={handleSubmit}>\n                            {reg ? 'CREATE ACCOUNT' : 'SIGN IN'}\n                        </button>{' '}\n                        {log && (\n                            <Link to=\"/forgot_password\">Forget Password?</Link>\n                        )}\n                    </form>\n                </div>\n                <div className=\"logReg-quick\">\n                    <span>By creating an account, you agree to the</span>\n                    <div className=\"logReg-privacy\">\n                        <Link>AliExpress.com Free Membership Agreement </Link>\n                        &nbsp;\n                        <span>and</span>&nbsp;\n                        <Link>Privacy Policy</Link>\n                    </div>\n                    <span className=\"logReg-quickText\">Quick access with</span>\n                    <button className=\"google\" onClick={googleLogin}></button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n"],"sourceRoot":""}