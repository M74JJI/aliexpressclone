{"version":3,"sources":["pages/admin/sub/SubUpdate.js"],"names":["SubUpdate","match","history","user","useSelector","state","useState","name","setName","loading","setLoading","categories","setCategories","parent","setParent","useEffect","loadCategories","loadSub","getCategories","then","c","data","getSub","params","slug","s","className","onChange","e","target","value","length","map","key","_id","selected","handleSubmit","preventDefault","updateSub","token","res","toast","success","push","catch","err","console","log","response","status","error"],"mappings":"uMA6FeA,UAlFG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAClBC,EAASC,aAAY,SAACC,GAAD,sBAAiBA,MAAtCF,KADgC,EAGhBG,mBAAS,IAHO,mBAGjCC,EAHiC,KAG3BC,EAH2B,OAIVF,oBAAS,GAJC,mBAIjCG,EAJiC,KAIxBC,EAJwB,OAKJJ,mBAAS,IALL,mBAKjCK,EALiC,KAKrBC,EALqB,OAMZN,mBAAS,IANG,mBAMjCO,EANiC,KAMzBC,EANyB,KAQxCC,qBAAU,WACRC,IACAC,MACC,IAEH,IAAMD,EAAiB,kBACrBE,cAAgBC,MAAK,SAACC,GAAD,OAAOR,EAAcQ,EAAEC,UAExCJ,EAAU,kBACdK,YAAOrB,EAAMsB,OAAOC,MAAML,MAAK,SAACM,GAC9BjB,EAAQiB,EAAEJ,KAAKd,MACfO,EAAUW,EAAEJ,KAAKR,YAsBrB,OACE,yBAAKa,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,OACZjB,EACC,wBAAIiB,UAAU,eAAd,aAEA,mDAGF,yBAAKA,UAAU,cACb,kDACA,4BACEnB,KAAK,WACLmB,UAAU,eACVC,SAAU,SAACC,GAAD,OAAOd,EAAUc,EAAEC,OAAOC,SAEpC,iDACCnB,EAAWoB,OAAS,GACnBpB,EAAWqB,KAAI,SAACZ,GAAD,OACb,4BAAQa,IAAKb,EAAEc,IAAKJ,MAAOV,EAAEc,IAAKC,SAAUf,EAAEc,MAAQrB,GACnDO,EAAEb,WAMb,kBAAC,IAAD,CACE6B,aAlDW,SAACR,GACpBA,EAAES,iBAEF3B,GAAW,GACX4B,YAAUrC,EAAMsB,OAAOC,KAAM,CAAEjB,OAAMM,UAAUV,EAAKoC,OACjDpB,MAAK,SAACqB,GAEL9B,GAAW,GACXF,EAAQ,IACRiC,IAAMC,QAAN,WAAkBF,EAAInB,KAAKd,KAA3B,iBACAL,EAAQyC,KAAK,iBAEdC,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZnC,GAAW,GACiB,MAAxBmC,EAAIG,SAASC,QAAgBR,IAAMS,MAAML,EAAIG,SAAS3B,UAoCtDd,KAAMA,EACNC,QAASA","file":"static/js/42.938c93f7.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AdminNav from \"../../../components/nav/AdminNav\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { getCategories } from \"../../../functions/category\";\nimport { updateSub, getSub } from \"../../../functions/sub\";\nimport { Link } from \"react-router-dom\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CategoryForm from \"../../../components/forms/CategoryForm\";\nimport LocalSearch from \"../../../components/forms/LocalSearch\";\n\nconst SubUpdate = ({ match, history }) => {\n  const { user } = useSelector((state) => ({ ...state }));\n\n  const [name, setName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [parent, setParent] = useState(\"\");\n\n  useEffect(() => {\n    loadCategories();\n    loadSub();\n  }, []);\n\n  const loadCategories = () =>\n    getCategories().then((c) => setCategories(c.data));\n\n  const loadSub = () =>\n    getSub(match.params.slug).then((s) => {\n      setName(s.data.name);\n      setParent(s.data.parent);\n    });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(name);\n    setLoading(true);\n    updateSub(match.params.slug, { name, parent }, user.token)\n      .then((res) => {\n        // console.log(res)\n        setLoading(false);\n        setName(\"\");\n        toast.success(`\"${res.data.name}\" is updated`);\n        history.push(\"/admin/sub\");\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        if (err.response.status === 400) toast.error(err.response.data);\n      });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-2\">\n          <AdminNav />\n        </div>\n        <div className=\"col\">\n          {loading ? (\n            <h4 className=\"text-danger\">Loading..</h4>\n          ) : (\n            <h4>Update sub category</h4>\n          )}\n\n          <div className=\"form-group\">\n            <label>Parent category</label>\n            <select\n              name=\"category\"\n              className=\"form-control\"\n              onChange={(e) => setParent(e.target.value)}\n            >\n              <option>Please select</option>\n              {categories.length > 0 &&\n                categories.map((c) => (\n                  <option key={c._id} value={c._id} selected={c._id === parent}>\n                    {c.name}\n                  </option>\n                ))}\n            </select>\n          </div>\n\n          <CategoryForm\n            handleSubmit={handleSubmit}\n            name={name}\n            setName={setName}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SubUpdate;\n"],"sourceRoot":""}